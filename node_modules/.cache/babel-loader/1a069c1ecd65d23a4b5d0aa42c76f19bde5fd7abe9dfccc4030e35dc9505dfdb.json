{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\najam\\\\OneDrive\\\\Documents\\\\proj\\\\src\\\\layout\\\\Index.jsx\";\nimport React from 'react';\nimport { Outlet } from 'react-router-dom';\nimport { Header } from './Header';\nimport Footer from './Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Index = () => {\n  const isLogin = () => {\n    // add authentication requirements\n    // # user can be authenticated by using token from localStorage or cookies\n    // # always authenticate user by using auth verification API by sending auth token as a parameter\n    // # returing false statement represents authenticated user and the false de-authenticated user\n\n    return true;\n  };\n  return isLogin() ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Outlet, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true) :\n  // Do someting according to the requirement\n  // Eiteher you can navigate the user to any other route or can also return to other component such as login or signup\n  null;\n};\n_c = Index;\nexport default Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");","map":{"version":3,"names":["React","Outlet","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","Index","isLogin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/najam/OneDrive/Documents/proj/src/layout/Index.jsx"],"sourcesContent":["import React from 'react'\nimport { Outlet } from 'react-router-dom'\nimport { Header } from './Header'\nimport Footer from './Footer'\n\nconst Index = () => {\n\n    const isLogin = () => {\n        // add authentication requirements\n        // # user can be authenticated by using token from localStorage or cookies\n        // # always authenticate user by using auth verification API by sending auth token as a parameter\n        // # returing false statement represents authenticated user and the false de-authenticated user\n\n        return true\n    }\n    return (\n        isLogin() ?\n            <>\n                <Header />\n                <Outlet />\n                <Footer />\n            </> :\n            // Do someting according to the requirement\n            // Eiteher you can navigate the user to any other route or can also return to other component such as login or signup\n            null\n    )\n}\n\nexport default Index"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,kBAAkB;AACzC,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,UAAU;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAEhB,MAAMC,OAAO,GAAGA,CAAA,KAAM;IAClB;IACA;IACA;IACA;;IAEA,OAAO,IAAI;EACf,CAAC;EACD,OACIA,OAAO,CAAC,CAAC,gBACLJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACIL,OAAA,CAACH,MAAM;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVT,OAAA,CAACJ,MAAM;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVT,OAAA,CAACF,MAAM;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACZ,CAAC;EACH;EACA;EACA,IAAI;AAEhB,CAAC;AAAAC,EAAA,GArBKP,KAAK;AAuBX,eAAeA,KAAK;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}